{"version":3,"sources":["hooks/useLogin.js","components/ConditionalRender.js","components/TestResult.js","App.js","index.js"],"names":["testUsers","testName","email","Math","floor","random","password","testConditions","result","authenticationResponse","code","message","subscriptionResponse","data","status","ConditionalRender","props","renderCondition","children","TestResult","ranOnce","useRef","useState","jsonVisible","setJsonVisible","testResult","setTestResult","apiResult","setApiResult","userLogin","setEmail","poolData","UserPoolId","ClientId","cognitoPool","CognitoUserPool","cognitoUser","CognitoUser","Username","Pool","authDetails","AuthenticationDetails","Password","authenticateUser","onSuccess","res","idToken","payload","cognitoUsername","subscriptionEndpoint","axios","get","onComplete","onFailure","err","validate","setPassword","useLogin","loginStatus","testResults","map","condition","runTest","console","log","current","TestConditions","index","badge","length","conditionString","String","replace","useEffect","Card","style","marginTop","paddingBottom","Button","padding","margin","alignItems","textAlign","variant","onClick","Title","Badge","bg","includes","Body","Subtitle","className","name","collapsed","src","width","disabled","App","RenderUserTests","user","testCallback","testFunction","Row","Col","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.3d3a631f.chunk.js","sourcesContent":["/*\nThis hook is used to validate a user.\nIt accepts a default email, password, and callback function as props:\n    {\n      email: props.email,\n      password: props.password,\n      onComplete: (loginStatus) => {},\n    }\n\nThese methods allow the parent calling the hooks to handle the success and failure of the login.\n\nIt returns an object with the following methods:\n    setEmail(): sets the email of the user for login\n    setPassword(): sets the password of the user for login\n    validate(): validates the user\n*/\nimport {\n  AuthenticationDetails,\n  CognitoUser,\n  CognitoUserPool\n} from \"amazon-cognito-identity-js\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nexport default function useLogin(props) {\n  const [email, setEmail] = useState(props.email);\n  const [password, setPassword] = useState(props.password);\n\n  async function validateUserSubscription() {\n    const poolData = {\n      UserPoolId: \"us-east-1_jt5NMhoTk\",\n      ClientId: \"7mtgtq8v0drgkg2gg869m2capq\",\n    };\n\n    const cognitoPool = new CognitoUserPool(poolData);\n\n    const cognitoUser = new CognitoUser({\n      Username: email,\n      Pool: cognitoPool\n    });\n\n    const authDetails = new AuthenticationDetails({\n      Username: email,\n      Password: password\n    });\n\n    cognitoUser.authenticateUser(authDetails, {\n      onSuccess: async (res) => {\n        const authenticationResponse = res?.idToken?.payload;\n        const cognitoUsername = res?.idToken?.payload[\"cognito:username\"];\n\n        const subscriptionEndpoint = `https://1gjpy63ru4.execute-api.us-east-1.amazonaws.com/test/customers/${cognitoUsername}/subscription`;\n        const subscriptionResponse = await axios.get(subscriptionEndpoint);\n        if (subscriptionResponse.data.status === true) {\n          props.onComplete({\n            message: \"paid\",\n            authenticationResponse: authenticationResponse,\n            subscriptionResponse: subscriptionResponse\n          });\n        } else {\n          props.onComplete({\n            message: \"unpaid\",\n            authenticationResponse: authenticationResponse,\n            subscriptionResponse: subscriptionResponse\n          });\n        }\n      },\n      onFailure: (err) => {\n        let message = \"\";\n        if(err.code === \"UserNotConfirmedException\"){\n          message = \"unconfirmed\";\n        }else if(err.code === \"NotAuthorizedException\"){\n          message = \"unauthorized\";\n        }else{\n          message = err.code;\n        }\n        props.onComplete({\n          message: message,\n          authenticationResponse: err,\n          subscriptionResponse: {}\n        });\n      }\n    });\n  }\n\n  return {\n    validate: validateUserSubscription,\n    setEmail: setEmail,\n    setPassword: setPassword\n  };\n}\n\nexport const testUsers = [\n  {\n    testName: \"Unregistered user\",\n    email: `total_garbage${Math.floor(Math.random() * 10000)}@mailinator.com`,\n    password: \"Password123!\",\n    testConditions:[\n      result => result.authenticationResponse.code === \"NotAuthorizedException\",\n        result => result.message === \"unauthorized\"\n    ],\n  },\n\n  {\n    testName: \"Unconfirmed user\",\n    email: \"i_am_unconfirmed@mailinator.com\",\n    password: \"Password123!\",\n    testConditions: [\n      result => result.authenticationResponse.code === \"UserNotConfirmedException\",\n      result => result.message === \"unconfirmed\",\n    ],\n  },\n\n  {\n    testName: \"Unpaid user\",\n    email: \"registered_and_unpaid@mailinator.com\",\n    password: \"Password123!\",\n    testConditions: [\n      result => result.subscriptionResponse.data.status === false,\n      result => result.authenticationResponse[\"email\"] === \"registered_and_unpaid@mailinator.com\",\n      result => result.authenticationResponse[\"given_name\"] === \"Free\",\n      result => result.authenticationResponse[\"family_name\"] === \"Loader\",\n      result => result.message === \"unpaid\",\n    ],\n  },\n\n  {\n    testName: \"Premium user\",\n    email: \"has_premium_subscription@mailinator.com\",\n    password: \"Password123!\",\n    testConditions: [\n      result => result.subscriptionResponse.data.status === true,\n      result => result.authenticationResponse[\"email\"] === \"has_premium_subscription@mailinator.com\",\n      result => result.authenticationResponse[\"given_name\"] === \"High\",\n      result => result.authenticationResponse[\"family_name\"] === \"Roller\",\n      result => result.message === \"paid\",\n    ],\n  }\n];\n\n","import React from 'react';\n\nexport const ConditionalRender = (props) =>{\n    if(props.renderCondition) {\n        return (props.children)\n    }else{\n        return null\n    }\n}","import {useState, useEffect, useRef} from \"react\";\nimport useLogin from \"../hooks/useLogin\";\nimport ReactJson from \"react-json-view\";\nimport _ from \"lodash\";\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport {Card} from \"react-bootstrap\";\nimport {ConditionalRender} from \"./ConditionalRender\";\n\nexport default function TestResult(props) {\n    const ranOnce = useRef();\n    const [jsonVisible, setJsonVisible] = useState(false);\n    const [testResult, setTestResult] = useState([]);\n    const [apiResult, setApiResult] = useState({\n        message: \"Test Pending\",\n        authenticationResponse: {},\n        subscriptionResponse: {}\n    });\n\n    const userLogin = useLogin({\n        email: props.email,\n        password: props.password,\n        onComplete: (loginStatus) => {\n            setApiResult(loginStatus);\n            const testResults = props.testConditions.map((condition) => {\n                return condition(loginStatus);\n            });\n            setTestResult(testResults);\n        }\n    });\n\n    function runTest() {\n        console.log(\"Running test: \", props.testName);\n        setTestResult([]);\n        setApiResult({\n            message: \"Test Pending\",\n            authenticationResponse: {},\n            subscriptionResponse: {}\n        })\n        userLogin.validate()\n        ranOnce.current = true;\n    }\n\n    useEffect(() => {\n        if (ranOnce.current !== true) {\n            runTest();\n        }\n    }, []);\n\n    function getBadgeColor() {\n        if (testResult.includes(false)) {\n            return \"danger\";\n        } else if (testResult.includes(true)) {\n            return \"success\";\n        } else {\n            return \"secondary\";\n        }\n    }\n\n    function TestConditions() {\n        return props.testConditions.map((condition,index) => {\n            let badge = \"\";\n            if(testResult.length===0){\n                badge = \"🕚 \"\n            }\n            else if(testResult[index] === true){\n                badge = \"✅ \";\n            }\n            else{\n                badge = \"❌ \";\n            }\n\n            let conditionString = String(condition);\n            conditionString = conditionString.replace(\"function(e)\", \"\");\n            conditionString = conditionString.replace(\"return\", \"\");\n            conditionString = conditionString.replace(\"e.\", \"hookResponse.\");\n            conditionString = conditionString.replace(\"{\", \"\");\n            conditionString = conditionString.replace(\"}\", \"\");\n            conditionString = conditionString.replace(\"===\", \" === \");\n            conditionString = conditionString.replace(\"!==\", \" !== \");\n            conditionString = conditionString.replace(\"!1\", \"false\");\n            conditionString = conditionString.replace(\"!0\", \"true\");\n\n            return (\n                <p key={conditionString}>\n                {badge}\n                {conditionString}\n                </p>\n            )\n        })\n    }\n\n    return (\n        <Card\n            style={{marginTop: \"1rem\", paddingBottom: \"-1rem\"}}\n        >\n            <Button\n                style={{padding: \"1rem\", margin: \"0.5rem\", alignItems: \"left\", textAlign: \"left\"}}\n                variant={\"light\"}\n                onClick={() => {\n                    setJsonVisible(!jsonVisible)\n                }}\n            >\n                <Card.Title>\n                    {props.testName}:{\" \"}\n                    <Badge bg={getBadgeColor()}>{apiResult.message}</Badge>\n                </Card.Title>\n            </Button>\n\n            <ConditionalRender renderCondition={jsonVisible}>\n                <Card.Body>\n                    <Card.Subtitle className=\"mb-2 text-muted\">Test Conditions</Card.Subtitle>\n                    <TestConditions/>\n                    <Card.Subtitle\n                        className=\"mb-2 text-muted\"\n                        style={{marginTop: \"1rem\"}}\n                    >\n                        Response Object\n                    </Card.Subtitle>\n                    <ReactJson\n                        name={\"hookResponse\"}\n                        collapsed={1}\n                        src={apiResult}\n                    />\n                    <Button\n                        style={{marginTop: \"1rem\", width:\"100%\"}}\n                        variant={testResult === null ? \"outline-primary\" : \"primary\"}\n                        onClick={runTest}\n                        disabled={testResult === null}\n                    >\n                        {testResult === null ? \"Test Pending\" : \"Run Test Again\"}\n                    </Button>\n                </Card.Body>\n            </ConditionalRender>\n        </Card>\n    );\n}\n","import TestResult from \"./components/TestResult\";\nimport {testUsers} from \"./hooks/useLogin\";\nimport {Row, Col} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n    function RenderUserTests() {\n        return testUsers.map((user) => {\n            return (\n                <TestResult\n                    key={user.testName}\n                    email={user.email}\n                    password={user.password}\n                    testName={user.testName}\n                    testCallback={user.testFunction}\n                    testConditions={user.testConditions}\n                />\n            );\n        });\n    }\n\n    return (\n        <Row className=\"App\" style={{margin: \"1rem\"}}>\n            <Col>\n                <h1>Login API Status</h1>\n                <RenderUserTests/>\n            </Col>\n        </Row>\n    );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}